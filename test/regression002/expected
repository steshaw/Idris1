reg003a.idr:4:11:When checking type of Main.ECons:
No such variable OddList
reg003a.idr:7:11:When checking type of Main.OCons:
No such variable EvenList
reg003a.idr:9:6:When checking type of Main.test:
No such variable EvenList
reg006.idr:17:1:
RBTree.lookup is possibly not total due to recursive path RBTree.lookup --> RBTree.lookup
reg007.lidr:8:1:A.n is already defined
reg007.lidr:12:11-17:
When checking right hand side of hurrah with expected type
        0 = 1

Type mismatch between
        n = lala (Type of isSame)
and
        0 = 1 (Expected type)

Specifically:
        Type mismatch between
                1
        and
                0
reg010.idr:5:15:
When checking left hand side of with block in usubst.unsafeSubst:
Can't match on with block in usubst.unsafeSubst warg a P x x px
reg018a.idr:16:1:
conat.minusCoNat is possibly not total due to recursive path conat.minusCoNat --> conat.minusCoNat
reg018a.idr:21:1:
conat.loopForever is possibly not total due to: conat.minusCoNat
reg018b.idr:8:1:
A.showB is possibly not total due to recursive path A.showB --> A.showB
reg018b.idr:11:1:
A.B implementation of Prelude.Show.Show is possibly not total due to: A.showB
reg018c.idr:21:1:
CodataTest.inf is possibly not total due to: with block in CodataTest.inf
reg018d.idr:8:1:
Main.pull is not total as there are missing cases
reg023.idr:7:5:
When checking right hand side of bad with expected type
        f Nat

Type mismatch between
        Nat (Type of 0)
and
        f Nat (Expected type)
